{"version":3,"sources":["components/Chart.jsx","components/NumberInput.jsx","components/Inputs.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["Example","data","this","props","results","startingAge","age","convertDataArray","baseCaseResults","lowerMonthlySpendResults","oneOffPurchaseResults","margin","top","right","left","bottom","dot","dataKey","type","domain","ticks","getTicks","value","offset","position","dy","y","stroke","label","name","strokeWidth","x","Number","oneOffPurchaseDaysUntilFinancialIndependence","lowerMonthlySpendDaysUntilFinancialIndependence","daysUntilFinancialIndependence","PureComponent","dataArray1","dataArray2","dataArray3","i","output","length","push","networth","ageAsNumber","Math","floor","runningAge","NumberInput","state","event","setState","target","updateState","id","Form","Control","onChange","onInputChange","bind","Component","Inputs","className","Row","Col","column","sm","Header","App","inputsDictionaryNew","inputsDictionary","runCalcs","expenditure","netEarnings","marginOfSafety","lowerSpend","oneOffPurchase","yearsMonthsDays1","yearsMonthsDays2","yearsMonthsDays3","url","concat","process","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","Container","fluid","md","style","height","CardDeck","Card","minWidth","border","Body","Text","baseCaseFinancialFreedomAge","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cde66f7c.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Label,\r\n  ReferenceLine,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\n// EXAMPLE DATA FORMAT\r\n// const data = [\r\n//   {\r\n//     value: 0,\r\n//     time: 0\r\n//   },\r\n//   {\r\n//     value: 100,\r\n//     time: 1\r\n//   }\r\n// ];\r\n\r\nexport default class Example extends PureComponent {\r\n  // jsfiddleUrl for testing default settings \"https://jsfiddle.net/alidingling/xqjtetw0/\";\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={convertData(this.props.results, this.props.age)}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n          dot=\"false\"\r\n        >\r\n          {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n          <XAxis\r\n            dataKey=\"age\"\r\n            type=\"number\"\r\n            domain={[this.props.age]}\r\n            ticks={getTicks(this.props.age)}\r\n          >\r\n            <Label value=\"Age\" offset={0} position=\"insideBottom\" />\r\n          </XAxis>\r\n          <YAxis>\r\n            <Label\r\n              value=\"Net-worth\"\r\n              dy={40}\r\n              offset={-20}\r\n              position=\"insideTopLeft\"\r\n            />\r\n          </YAxis>\r\n          <Tooltip />\r\n          <Legend />\r\n\r\n          <ReferenceLine y={0} stroke=\"#666666\" label=\"\" />\r\n\r\n          <Line\r\n            name=\"One-off purchase\"\r\n            type=\"monotone\"\r\n            dataKey=\"oneOffPurchaseResults\"\r\n            dot={false}\r\n            stroke=\"#c7ceea\"\r\n            strokeWidth={4}\r\n            //activeDot={{ r: 8 }}\r\n          />\r\n          <ReferenceLine\r\n            x={\r\n              Number(\r\n                this.props.results.oneOffPurchaseDaysUntilFinancialIndependence\r\n              ) /\r\n                365.25 +\r\n              Number(this.props.age)\r\n            }\r\n            stroke=\"#c7ceea\"\r\n            label=\"\"\r\n          />\r\n\r\n          <Line\r\n            name=\"Lower monthly spend\"\r\n            type=\"monotone\"\r\n            dataKey=\"lowerMonthlySpendResults\"\r\n            dot={false}\r\n            stroke=\"#75c2a6\"\r\n            strokeWidth={4}\r\n            //activeDot={{ r: 8 }}\r\n          />\r\n          <ReferenceLine\r\n            x={\r\n              Number(\r\n                this.props.results\r\n                  .lowerMonthlySpendDaysUntilFinancialIndependence\r\n              ) /\r\n                365.25 +\r\n              Number(this.props.age)\r\n            }\r\n            stroke=\"#75c2a6\"\r\n            label=\"\"\r\n          />\r\n          <Line\r\n            name=\"Base case\"\r\n            type=\"monotone\"\r\n            dataKey=\"networth\"\r\n            dot={false}\r\n            stroke=\"#ff9aa2\"\r\n            strokeWidth={4}\r\n            //activeDot={{ r: 8 }}\r\n          />\r\n          <ReferenceLine\r\n            x={\r\n              Number(this.props.results.daysUntilFinancialIndependence) /\r\n                365.25 +\r\n              Number(this.props.age)\r\n            }\r\n            stroke=\"#ffb7b2\"\r\n            label=\"\"\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nfunction convertData(data, startingAge) {\r\n  return convertDataArray(\r\n    data.baseCaseResults,\r\n    data.lowerMonthlySpendResults,\r\n    data.oneOffPurchaseResults,\r\n    startingAge\r\n  );\r\n}\r\n\r\nfunction convertDataArray(dataArray1, dataArray2, dataArray3, startingAge) {\r\n  var output = [];\r\n  if (dataArray1 == null) return output;\r\n  var i;\r\n  for (i = 0; i < dataArray1.length; i++) {\r\n    output.push({\r\n      networth: dataArray1[i],\r\n      lowerMonthlySpendResults: dataArray2[i],\r\n      oneOffPurchaseResults: dataArray3[i],\r\n      age: i / 12 + Number(startingAge),\r\n    });\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction getTicks(age) {\r\n  var ageAsNumber = Number(age);\r\n  var output = [];\r\n  output[0] = Math.floor(ageAsNumber);\r\n  var runningAge = ageAsNumber + 1;\r\n  var i = 1;\r\n  while (runningAge < 91) {\r\n    if (Math.floor(runningAge) % 10 === 0) {\r\n      output[i] = Math.floor(runningAge);\r\n      i++;\r\n    }\r\n    runningAge++;\r\n  }\r\n  return output;\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nclass NumberInput extends Component {\r\n  state = {\r\n    value: 0,\r\n  };\r\n\r\n  onInputChange(event) {\r\n    this.setState({ value: event.target.value });\r\n    this.props.updateState(this.props.id, event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form.Control type=\"number\" onChange={this.onInputChange.bind(this)} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberInput;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, Row } from \"react-bootstrap\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nclass Inputs extends Component {\r\n  render() {\r\n    return (\r\n      <div className={\"inputs \" + this.props.className}>\r\n        <h3>Inputs</h3>\r\n        <br></br>\r\n        <Form>\r\n          <Row className=\"paddingTopAndBottomSmall\">\r\n            <Col column sm={6}>\r\n              Age\r\n            </Col>\r\n            <Col sm={6}>\r\n              <NumberInput id=\"age\" updateState={this.props.updateState} />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"paddingTopAndBottomSmall\">\r\n            <Col column sm={6}>\r\n              Net-worth\r\n            </Col>\r\n            <Col sm={6}>\r\n              <NumberInput id=\"networth\" updateState={this.props.updateState} />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"paddingTopAndBottomSmall\">\r\n            <Col column sm={6}>\r\n              Annual cost of lifestyle\r\n            </Col>\r\n            <Col sm={6}>\r\n              <NumberInput\r\n                id=\"expenditure\"\r\n                updateState={this.props.updateState}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"paddingTopAndBottomSmall\">\r\n            <Col column sm={6}>\r\n              Annual net earnings\r\n            </Col>\r\n            <Col sm={6}>\r\n              {\" \"}\r\n              <NumberInput\r\n                id=\"netEarnings\"\r\n                updateState={this.props.updateState}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"paddingTopAndBottomSmall\">\r\n            <Col column sm={6}>\r\n              Margin of safety\r\n            </Col>\r\n            <Col sm={6}>\r\n              {\" \"}\r\n              <NumberInput\r\n                id=\"marginOfSafety\"\r\n                updateState={this.props.updateState}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inputs;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  state = {};\r\n  render() {\r\n    return <header className=\"App-header\">Opul</header>;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport Chart from \"./components/Chart\";\nimport Inputs from \"./components/Inputs\";\nimport Header from \"./components/Header\";\nimport NumberInput from \"./components/NumberInput\";\nimport { Card, CardDeck, Col, Container, Form, Row } from \"react-bootstrap\";\nimport \"./custom.scss\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      inputsDictionary: {\n        age: 0,\n        networth: 0,\n        expenditure: 0,\n        netEarnings: 0,\n        marginOfSafety: 0,\n        lowerSpend: 0,\n        oneOffPurchase: 0,\n      },\n      results: {\n        // baseCaseResults: [\n        //   10000,\n        //   100000,\n        //   100000,\n        //   0,\n        // ],\n        // daysUntilFinancialIndependence: 0,\n        yearsMonthsDays1: [0, 0, 0],\n        yearsMonthsDays2: [0, 0, 0],\n        yearsMonthsDays3: [0, 0, 0],\n      },\n    };\n  }\n\n  updateState = (id, value) => {\n    var inputsDictionaryNew = this.state.inputsDictionary;\n    inputsDictionaryNew[id] = value;\n    this.setState(\n      {\n        inputsDictionary: inputsDictionaryNew,\n      },\n      () => {\n        this.runCalcs();\n      }\n    );\n  };\n\n  runCalcs() {\n    const baseUrl =\n      \"https://opulazurefunction.azurewebsites.net/api/OpulFunction?code=\";\n    //const queryString = encodeQueryData(this.state.inputsDictionary);\n    const url = baseUrl.concat(process.env.REACT_APP_API_KEY);\n\n    const response = fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(this.state.inputsDictionary),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        this.setState({ results: data });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Container fluid>\n          <Row className=\"align-items-center\">\n            <Col md=\"4\" className=\"padding30\">\n              <Inputs\n                className=\"paddingTopAndBottomLarge\"\n                updateState={this.updateState}\n              />\n            </Col>\n            <Col md=\"8\" className=\"padding30\">\n              <h3 className=\"paddingTopAndBottomLarge\">\n                Projected net-worth over lifetime\n              </h3>\n              <div style={{ height: \"30vw\" }}>\n                <Chart\n                  results={this.state.results}\n                  age={this.state.inputsDictionary.age}\n                />\n              </div>\n              <CardDeck>\n                <Card\n                  style={{ minWidth: \"300px\" }}\n                  className=\"marginTopAndBottomLarge border-3\"\n                  border=\"pink\"\n                >\n                  <Card.Body>\n                    <Card.Text>\n                      <h4>\n                        Projected financial freedom - Age&#160;\n                        <text className=\"bold\">\n                          {this.state.results.baseCaseFinancialFreedomAge}\n                        </text>\n                      </h4>\n                      <div>{\"\\n\"}</div>\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays1[0]}{\" \"}\n                      </text>\n                      years&#160;&#160;\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays1[1]}{\" \"}\n                      </text>\n                      months&#160;&#160;\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays1[2]}{\" \"}\n                      </text>{\" \"}\n                      days\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n                <Card\n                  className=\"marginTopAndBottomLarge border-3\"\n                  style={{ minWidth: \"300px\" }}\n                  border=\"green\"\n                >\n                  <Card.Body>\n                    <Card.Text>\n                      <h4>Impact of reduction in lifestyle</h4>\n                      Cutting back by{\" \"}\n                      <NumberInput\n                        id=\"lowerSpend\"\n                        updateState={this.updateState}\n                      />{\" \"}\n                      a month cuts working lifetime by:\n                      <div>{\"\\n\"}</div>\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays2[0]}\n                      </text>{\" \"}\n                      years&#160;&#160;\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays2[1]}\n                      </text>{\" \"}\n                      months&#160;&#160;\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays2[2]}\n                      </text>{\" \"}\n                      days\n                      {/* <Form.Check\n                        className=\"paddingTopAndBottomSmall\"\n                        type=\"checkbox\"\n                        label=\"Add to chart\"\n                        style={{ fontStyle: \"italic\" }}\n                      /> */}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n                <Card\n                  className=\"marginTopAndBottomLarge border-3\"\n                  style={{ minWidth: \"300px\" }}\n                  border=\"blue\"\n                >\n                  <Card.Body>\n                    <Card.Text>\n                      <h4>One-off purchase</h4>A one-off purchase of{\" \"}\n                      <NumberInput\n                        id=\"oneOffPurchase\"\n                        updateState={this.updateState}\n                      />\n                      increases working lifetime by\n                      <div>{\"\\n\"}</div>\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays3[0]}\n                      </text>{\" \"}\n                      years&#160;&#160;\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays3[1]}\n                      </text>{\" \"}\n                      months&#160;&#160;\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays3[2]}\n                      </text>{\" \"}\n                      days\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n\n                <Card\n                  className=\"marginTopAndBottomLarge border-3\"\n                  style={{ minWidth: \"300px\" }}\n                >\n                  <Card.Body>\n                    <Card.Text>\n                      <h4>Getting a head start</h4>2 years of saving an extra{\" \"}\n                      <text className=\"bold\">200</text> a month reduces working\n                      lifetime by\n                      <div>{\"\\n\"}</div>\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays2[0]}\n                      </text>{\" \"}\n                      years&#160;&#160;\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays2[1]}\n                      </text>{\" \"}\n                      months&#160;&#160;\n                      <text className=\"bold\">\n                        {this.state.results.yearsMonthsDays2[2]}\n                      </text>{\" \"}\n                      days\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </CardDeck>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction encodeQueryData(data) {\n  const output = [];\n  for (let d in data)\n    output.push(encodeURIComponent(d) + \"=\" + encodeURIComponent(data[d]));\n  return output.join(\"&\");\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}